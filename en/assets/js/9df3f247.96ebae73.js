"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7148],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(r),b=a,m=d["".concat(c,".").concat(b)]||d[b]||l[b]||o;return r?n.createElement(m,s(s({ref:t},u),{},{components:r})):n.createElement(m,s({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},7254:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={title:"TypeScript Usage"},s=void 0,i={unversionedId:"advanced/typescript",id:"advanced/typescript",title:"TypeScript Usage",description:"Basic typescript usage doesn't require anything special except for writing create()(...) instead of create(...)",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/advanced/typescript.md",sourceDirName:"advanced",slug:"/advanced/typescript",permalink:"/zustand-vue/en/docs/advanced/typescript",draft:!1,editUrl:"https://github.com/AwesomeDevin/zustand-vue/tree/main/docs/docs/advanced/typescript.md",tags:[],version:"current",frontMatter:{title:"TypeScript Usage"},sidebar:"tutorialSidebar",previous:{title:"Transient Updates",permalink:"/zustand-vue/en/docs/advanced/transiend-updates"}},c={},p=[{value:"zustand-pub",id:"zustand-pub",level:2},{value:"defineStore",id:"definestore",level:3},{value:"getStore",id:"getstore",level:3}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Basic typescript usage doesn't require anything special except for writing ",(0,a.kt)("inlineCode",{parentName:"p"},"create<State>()(...)")," instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"create(...)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { create } from 'zustand-vue'\n\n// import { create } from 'zustand'\n\n// if you need middleware\n// import { devtools, persist } from 'zustand/middleware'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) => void\n}\n\nconst useBearStore = create<BearState>()(\n  \n  (set) => ({\n    bears: 0,\n    increase: (by) => set((state) => ({ bears: state.bears + by })),\n  })\n\n  // if you need middleware\n  // devtools(\n  //   persist(\n  //     (set) => ({\n  //       bears: 0,\n  //       increase: (by) => set((state) => ({ bears: state.bears + by })),\n  //     }),\n  //     {\n  //       name: 'bear-storage',\n  //     }\n  //   )\n  // )\n\n)\n")),(0,a.kt)("h2",{id:"zustand-pub"},"zustand-pub"),(0,a.kt)("h3",{id:"definestore"},"defineStore"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import PubStore from 'zustand-pub'\nimport { create } from 'zustand-vue'\n\n// import { create } from 'zustand'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) => void\n}\n\nconst Pub = new PubStore('key')\n\nconst bearStore = Pub.defineStore<BearState>('bearStore', (set, get, store) => {\n  return ({\n    bears: 0,\n    increase: (by) => set((state) => ({ bears: state.bears + by })),\n  })\n})\n\nconst useBearStore = create(bearStore)\n")),(0,a.kt)("h3",{id:"getstore"},"getStore"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import PubStore from \"zustand-pub\";\nimport create from 'zustand-vue'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) => void\n}\n\nconst pub = new PubStore('key')\nconst store = pub.getStore<BearState>(\"bearStore\");\n\n\nconst useBearStore = create(bearStore);\n")),(0,a.kt)("p",null,"A more complete TypeScript guide is ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pmndrs/zustand/blob/main/docs/guides/typescript.md"},"here"),"."))}d.isMDXComponent=!0}}]);